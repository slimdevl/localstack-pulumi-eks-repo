version: "3.8"

services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack@sha256:f63b6c83dfd64b0e45e3d49a43f5a5ef517441af67ea9b990e006d9e7cc35d1a
    network_mode: bridge
    ports:
      - "127.0.0.1:53:53"                # only required for Pro
      - "127.0.0.1:53:53/udp"            # only required for Pro
      - "127.0.0.1:443:443"              # only required for Pro
      - "127.0.0.1:4510-4559:4510-4559"
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4571:4571"
    environment:
      DEBUG: ${DEBUG:-}
      DATA_DIR: ${DATA_DIR-}
      LAMBDA_EXECUTOR: ${LAMBDA_EXECUTOR-}
      LOCALSTACK_API_KEY: ${LOCALSTACK_API_KEY:-}
      HOST_TMP_FOLDER: ${TMPDIR:-/tmp/}localstack
      DOCKER_HOST: unix:///var/run/docker.sock
      SERVICES: account,acm,acm-pca,apigateway,apigatewaymanagementapi,apigatewayv2,autoscaling,es,firehose,cloudformation,cloudtrail,cloudwatch,dynamodb,dynamodbstreams,ebs,ec2,ec2-instance-connect,ecr,ecr-public,ecs,efs,eks,elastic-inference,elb,elbv2,events,iam,kafka,kafkaconnect,kms,lambda,pricing,rds,rds-data,route53,route53domains,route53resolver,s3,s3api,secretsmanager,sms,sns,sqs,ssm,sts
      DEFAULT_REGION: ${AWS_REGION:-us-west-2}
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
